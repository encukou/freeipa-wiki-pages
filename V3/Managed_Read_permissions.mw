__NOTOC__

{{Admon/important|Work in progress|This design is not complete yet.
  However if you have any comments, please feel free to discuss them.}}

= Overview =

IPA is extended to include a system of fine-grained read permissions
that administrators can assign to specific users or groups.

= Use Cases =

TODO

= Design =

== Managed Permissions ==

[[V3/Permissions_V2|V2 permissions]] with the
<tt>ipaPermDefaultAttr</tt> attribute set are called Managed permissions.

These permissions will allow access to a set of attributes defined by IPA
and kept up-to-date on upgrades, while allowing users to add or remove
specific attributes from the default list.

To ensure that installing low-version replicas or disabling plugins does not
revoke access to existing data, the default list of attributes will be kept
in LDAP (in <tt>ipaPermDefaultAttr</tt>).
On updates, new attributes will be added to this list.
Users can not modify this list.

There will be two attribute lists
for holding attributes the admin added and removed:
<tt>ipaPermAllowedAttr</tt> and <tt>ipaPermExcludedAttrs</tt> respectively.
(In user-created permissions,
<tt>ipaPermAllowedAttr</tt> is used for the same purpose as here,
and the other two are empty.)

When generating the ACI, the resulting attribute list will be
computed by taking the <tt>ipaPermDefaultAttr</tt> set,
adding any <tt>ipaPermAllowedAttr</tt>s,
and then removing any <tt>ipaPermExcludedAttr</tt>.

For example, this permission:

    dn: cn=Read Users,cn=permissions,cn=pbac,$SUFFIX
    cn: Read Users
    objectClass: top
    objectClass: groupOfNames
    objectclass: ipaPermission
    objectclass: ipaManagedPermission
    ipaPermDefaultAttr: cn
    ipaPermDefaultAttr: sn
    ipaPermDefaultAttr: givenName
    ipaPermDefaultAttr: l
    ...
    ipaPermAllowedAttr: favoriteColor
    ipaPermExcludedAttr: givenName
    ipaPermType: SYSTEM
    ipaPermType: V2

would allow users to read all default attributes except <tt>givenName</tt>,
plus <tt>favoriteColor</tt>.

=== CLI & API ===

TODO: This section is historical. The CLI/API design will change.

The <tt>permission-{mod,find}</tt> commands will gain an option,
<tt>--excluded-attributes</tt>.
For <tt>permission-mod</tt> it is an error to use it with non-managed
permissions.
The <tt>permission-find</tt> command will also gain the
<tt>--default-attributes</tt> option.

The <tt>permission-{find,show}</tt> commands will output the two
user-modifiable lists.

The corresponding new API parameters will follow IPA naming conventions:
<tt>ipapermdefaultattr</tt> and <tt>ipapermexcludedattr</tt>.

== Marking Attributes in Plugins ==

The IPA Object plugins will gain a new attribute, <tt>default_permissions</tt>,
which will describe the permissions that are to be added by default
to manage that object.

This will allow plugins to be more self-contained; it will no longer be
necessary to modify IPA's update files to add plugin-specific permissions.

== Adding permissions for default read permissions ==

Default read permissions and privileges will be added for all IPA object types.
Most read permissions will be for anounymous/any access.

TODO list what will be added

== ACI.txt ==

TODO: Flesh this out more. Possibly combine with an
[https://fedorahosted.org/freeipa/ticket/4035 ACI audit tool].

To ensure that permission changes are properly reviewed, a summary file
similar to API.txt will be generated, and it will be checked on each build.

It will contain a summary of the default managed permissions.

A <tt>makeaci</tt> script similar to <tt>makeapi</tt> will be provided and
called to check the file on each build.

= Implementation =

No additional requirements or changes discovered during the implementation phase.

= Feature Managment =

=== UI ===

TODO: Managed permissions will need UI changes

=== CLI ===

See the CLI & API section in Design.

= Major configuration options and enablement =

Access control is configured via the existing RBAC system.

= Replication =

N/A, ACIs and permissions are replicated.

= Updates and Upgrades =

Old servers will not be able to modify Managed permissions,
except adding/removing them to/from prigileges.
Details are in [[V3/Permissions_V2|Permissions V2]],
which will be implemented in the same release.

(If we don't make it in the same release,
they will need a new permission flag)

= Dependencies =

No new package and library dependencies.

= External Impact =

Tests and documentation need to be written.

= Backup and Restore =

ACIs, permissions, privileges and roles are already included in backup & restore.

= Test Plan =

TODO

= RFE Author =

[[User:Pviktorin|Petr Viktorin]]
